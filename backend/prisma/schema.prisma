generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique @db.VarChar(255)
  password  String    @db.VarChar(255)
  name      String    @db.VarChar(255)
  role      user_role @default(CLIENT)
  createdAt DateTime  @default(now()) @map("createdAt")
  updatedAt DateTime  @updatedAt @map("updatedAt")
  cart      Cart?
  orders    Order[]

  @@map("User")
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(255)
  description String?     @db.Text
  price       Decimal     @db.Decimal(10, 2)
  stock       Int
  image       String?     @db.VarChar(255)
  createdAt   DateTime    @default(now()) @map("createdAt")
  updatedAt   DateTime    @updatedAt @map("updatedAt")
  cartItems   CartItem[]
  orderItems  OrderItem[]

  @@map("Product")
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int        @unique
  createdAt DateTime   @default(now()) @map("createdAt")
  updatedAt DateTime   @updatedAt @map("updatedAt")
  user      User       @relation(fields: [userId], references: [id])
  items     CartItem[]

  @@map("Cart")
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cartId    Int
  productId Int
  quantity  Int
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")
  cart      Cart     @relation(fields: [cartId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@unique([cartId, productId], name: "unique_cart_product")
  @@map("CartItem")
}

model OrderStatus {
  id    Int     @id @db.TinyInt
  name  String  @db.VarChar(50)
  orders Order[]

  @@map("OrderStatus")
}

model Order {
  id        Int         @id @default(autoincrement())
  userId    Int
  total     Decimal     @db.Decimal(10, 2)
  status    Int         @default(0) @db.TinyInt
  createdAt DateTime    @default(now()) @map("createdAt")
  updatedAt DateTime    @updatedAt @map("updatedAt")
  user      User        @relation(fields: [userId], references: [id])
  items     OrderItem[]
  orderStatus OrderStatus @relation(fields: [status], references: [id])

  @@map("Order")
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@map("OrderItem")
}

enum user_role {
  CLIENT
  SALES_MANAGER
}
